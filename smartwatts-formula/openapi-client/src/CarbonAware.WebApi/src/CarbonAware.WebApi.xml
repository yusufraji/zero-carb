<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CarbonAware.WebApi</name>
    </assembly>
    <members>
        <member name="M:CarbonAware.WebApi.Controllers.CarbonAwareController.GetBestEmissionsDataForLocationsByTime(System.String[],System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32)">
            <summary>
            Calculate the best emission data by list of locations for a specified time period.
            </summary>
            <param name="locations"> String array of named locations.</param>
            <param name="time"> [Optional] Start time for the data query.</param>
            <param name="toTime"> [Optional] End time for the data query.</param>
            <param name="durationMinutes"> [Optional] Duration for the data query.</param>
            <returns>Array of EmissionsData objects that contains the location, time and the rating in g/kWh</returns>
        </member>
        <member name="M:CarbonAware.WebApi.Controllers.CarbonAwareController.GetEmissionsDataForLocationsByTime(System.String[],System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32)">
            <summary>
            Calculate the observed emission data by list of locations for a specified time period.
            </summary>
            <param name="locations"> String array of named locations.</param>
            <param name="time"> [Optional] Start time for the data query.</param>
            <param name="toTime"> [Optional] End time for the data query.</param>
            <param name="durationMinutes"> [Optional] Duration for the data query.</param>
            <returns>Array of EmissionsData objects that contains the location, time and the rating in g/kWh</returns>
        </member>
        <member name="M:CarbonAware.WebApi.Controllers.CarbonAwareController.GetEmissionsDataForLocationByTime(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32)">
            <summary>
            Calculate the best emission data by location for a specified time period.
            </summary>
            <param name="location"> String named location.</param>
            <param name="time"> [Optional] Start time for the data query.</param>
            <param name="toTime"> [Optional] End time for the data query.</param>
            <param name="durationMinutes"> [Optional] Duration for the data query.</param>
            <returns>Array of EmissionsData objects that contains the location, time and the rating in g/kWh</returns>
        </member>
        <member name="M:CarbonAware.WebApi.Controllers.CarbonAwareController.GetCurrentForecastData(System.String[],System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
             <summary>
               Retrieves the most recent forecasted data and calculates the optimal marginal carbon intensity window.
             </summary>
             <param name="locations"> String array of named locations.</param>
             <param name="dataStartAt">
               Start time boundary of forecasted data points. Ignores current forecast data points before this time.
               Defaults to the earliest time in the forecast data.
             </param>
             <param name="dataEndAt">
               End time boundary of forecasted data points. Ignores current forecast data points after this time.
               Defaults to the latest time in the forecast data.
             </param>
             <param name="windowSize">
               The estimated duration (in minutes) of the workload.
               Defaults to the duration of a single forecast data point.
             </param>
             <remarks>
               This endpoint fetches only the most recently generated forecast for all provided locations.  It uses the "dataStartAt" and 
               "dataEndAt" parameters to scope the forecasted data points (if available for those times). If no start or end time 
               boundaries are provided, the entire forecast dataset is used. The scoped data points are used to calculate average marginal 
               carbon intensities of the specified "windowSize" and the optimal marginal carbon intensity window is identified.
            
               The forecast data represents what the data source predicts future marginal carbon intesity values to be, 
               not actual measured emissions data (as future values cannot be known).
            
               This endpoint is useful for determining if there is a more carbon-optimal time to use electicity predicted in the future.
             </remarks>
             <returns>An array of forecasts (one per requested location) with their optimal marginal carbon intensity windows.</returns>
             <response code="200">Returns the requested forecast objects</response>
             <response code="400">Returned if any of the input parameters are invalid</response>
             <response code="500">Internal server error</response>
             <response code="501">Returned if the underlying data source does not support forecasting</response>
        </member>
        <member name="M:CarbonAware.WebApi.Controllers.CarbonAwareController.BatchForecastDataAsync(System.Collections.Generic.IEnumerable{CarbonAware.WebApi.Models.EmissionsForecastBatchDTO})">
             <summary>
             Given an array of historical forecasts, retrieves the data that contains
             forecasts metadata, the optimal forecast and a range of forecasts filtered by the attributes [start...end] if provided.
             </summary>
             <remarks>
             This endpoint takes a batch of requests for historical forecast data, fetches them, and calculates the optimal 
             marginal carbon intensity windows for each using the same parameters available to the '/emissions/forecasts/current'
             endpoint.
            
             This endpoint is useful for back-testing what one might have done in the past, if they had access to the 
             current forecast at the time.
             </remarks>
             <param name="requestedForecasts"> Array of requested forecasts.</param>
             <returns>An array of forecasts with their optimal marginal carbon intensity window.</returns>
             <response code="200">Returns the requested forecast objects</response>
             <response code="400">Returned if any of the input parameters are invalid</response>
             <response code="500">Internal server error</response>
             <response code="501">Returned if the underlying data source does not support forecasting</response>
        </member>
        <member name="M:CarbonAware.WebApi.Controllers.CarbonAwareController.GetAverageCarbonIntensity(System.String,System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            Retrieves the measured carbon intensity data between the time boundaries and calculates the average carbon intensity during that period. 
            </summary>
            <remarks>
             This endpoint is useful for reporting the measured carbon intensity for a specific time period in a specific location.
            </remarks>
            <param name="location">The location name of the region that we are measuring carbon usage in. </param>
            <param name="startTime">The time at which the workload and corresponding carbon usage begins.</param>
            <param name="endTime">The time at which the workload and corresponding carbon usage ends. </param>
            <returns>A single object that contains the location, time boundaries and average carbon intensity value.</returns>
            <response code="200">Returns a single object that contains the information about the request and the average marginal carbon intensity</response>
            <response code="400">Returned if any of the requested items are invalid</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="M:CarbonAware.WebApi.Controllers.CarbonAwareController.GetAverageCarbonIntensityBatch(System.Collections.Generic.IEnumerable{CarbonAware.WebApi.Models.CarbonIntensityBatchDTO})">
            <summary>
            Given an array of request objects, each with their own location and time boundaries, calculate the average carbon intensity for that location and time period 
            and return an array of carbon intensity objects.
            </summary>
            <remarks>
            The application only supports batching across a single location with different time boundaries. If multiple locations are provided, an error is returned.
            For each item in the request array, the application returns a corresponding object containing the location, time boundaries, and average marginal carbon intensity. 
            </remarks>
            <param name="requestedCarbonIntensities"> Array of inputs where each contains a "location", "startDate", and "endDate" for which to calculate average marginal carbon intensity. </param>
            <returns>An array of CarbonIntensityDTO objects which each have a location, start time, end time, and the average marginal carbon intensity over that time period.</returns>
            <response code="200">Returns an array of objects where each contains location, time boundaries and the corresponding average marginal carbon intensity</response>
            <response code="400">Returned if any of the requested items are invalid</response>
            <response code="500">Internal server error</response>
        </member>
        <member name="P:CarbonAware.WebApi.Models.CarbonIntensityBaseDTO.Location">
            <summary>the location name where workflow is run </summary>
            <example>eastus</example>
        </member>
        <member name="P:CarbonAware.WebApi.Models.CarbonIntensityBaseDTO.StartTime">
            <summary>the time at which the workflow we are measuring carbon intensity for started </summary>
            <example>2022-03-01T15:30:00Z</example>
        </member>
        <member name="P:CarbonAware.WebApi.Models.CarbonIntensityBaseDTO.EndTime">
            <summary> the time at which the workflow we are measuring carbon intensity for ended</summary>
            <example>2022-03-01T18:30:00Z</example>
        </member>
        <member name="P:CarbonAware.WebApi.Models.CarbonIntensityDTO.CarbonIntensity">
            <summary>Value of the marginal carbon intensity in grams per kilowatt-hour.</summary>
            <example>345.434</example>
        </member>
        <member name="P:CarbonAware.WebApi.Models.EmissionsDataDTO.Location">
            <example>eastus</example>
        </member>
        <member name="P:CarbonAware.WebApi.Models.EmissionsDataDTO.Timestamp">
            <example>2022-06-01T14:45:00Z</example>
        </member>
        <member name="P:CarbonAware.WebApi.Models.EmissionsDataDTO.Duration">
            <example>30</example>
        </member>
        <member name="P:CarbonAware.WebApi.Models.EmissionsDataDTO.Value">
            <example>359.23</example>
        </member>
        <member name="P:CarbonAware.WebApi.Models.EmissionsForecastBaseDTO.RequestedAt">
            <summary>
            For current requests, this value is the timestamp the request for forecast data was made.
            For historical forecast requests, this value is the timestamp used to access the most 
            recently generated forecast as of that time. 
            </summary>
            <example>2022-06-01T00:03:30Z</example>
        </member>
        <member name="P:CarbonAware.WebApi.Models.EmissionsForecastBaseDTO.Location">
            <summary>The location of the forecast</summary>
            <example>eastus</example>
        </member>
        <member name="P:CarbonAware.WebApi.Models.EmissionsForecastBaseDTO.DataStartAt">
            <summary>
            Start time boundary of forecasted data points. Ignores forecast data points before this time.
            Defaults to the earliest time in the forecast data.
            </summary>
            <example>2022-06-01T12:00:00Z</example>
        </member>
        <member name="P:CarbonAware.WebApi.Models.EmissionsForecastBaseDTO.DataEndAt">
            <summary>
            End time boundary of forecasted data points. Ignores forecast data points after this time.
            Defaults to the latest time in the forecast data.
            </summary>
            <example>2022-06-01T18:00:00Z</example>
        </member>
        <member name="P:CarbonAware.WebApi.Models.EmissionsForecastBaseDTO.WindowSize">
            <summary>
            The estimated duration (in minutes) of the workload.
            Defaults to the duration of a single forecast data point.
            </summary>
            <example>30</example>
        </member>
        <member name="P:CarbonAware.WebApi.Models.EmissionsForecastBatchDTO.RequestedAt">
            <summary>
            For historical forecast requests, this value is the timestamp used to access the most
            recently generated forecast as of that time.
            </summary>
            <example>2022-06-01T00:03:30Z</example>
        </member>
        <member name="P:CarbonAware.WebApi.Models.EmissionsForecastBatchDTO.Location">
            <summary>The location of the forecast</summary>
            <example>eastus</example>
        </member>
        <member name="P:CarbonAware.WebApi.Models.EmissionsForecastDTO.GeneratedAt">
            <summary>
            Timestamp when the forecast was generated.
            </summary>
            <example>2022-06-01T00:00:00Z</example>
        </member>
        <member name="P:CarbonAware.WebApi.Models.EmissionsForecastDTO.OptimalDataPoints">
            <summary>
            The optimal forecasted data points within the 'forecastData' array.
            Returns empty array if 'forecastData' array is empty.
            </summary>
            <example>
            {
              "location": "eastus",
              "timestamp": "2022-06-01T14:45:00Z",
              "duration": 30,
              "value": 359.23
            }
            </example>
        </member>
        <member name="P:CarbonAware.WebApi.Models.EmissionsForecastDTO.ForecastData">
            <summary>
            The forecasted data points transformed and filtered to reflect the specified time and window parameters.
            Points are ordered chronologically; Empty array if all data points were filtered out.
            E.G. dataStartAt and dataEndAt times outside the forecast period; windowSize greater than total duration of forecast data;
            </summary>
            <example>
            [
              {
                "location": "eastus",
                "timestamp": "2022-06-01T14:40:00Z",
                "duration": 30,
                "value": 380.99
              },
              {
                "location": "eastus",
                "timestamp": "2022-06-01T14:45:00Z",
                "duration": 30,
                "value": 359.23
              },
              {
                "location": "eastus",
                "timestamp": "2022-06-01T14:50:00Z",
                "duration": 30,
                "value": 375.12
              }
            ]
            </example>
        </member>
    </members>
</doc>
